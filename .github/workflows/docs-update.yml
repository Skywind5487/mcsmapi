name: Docs Auto-Update

on:
  workflow_dispatch:
  push:
    paths:
      - "mcsmapi/**"
      - "docs/source/**"
      - "pyproject.toml"
    branches: [main]

jobs:
  build-and-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev] sphinx sphinx_rtd_theme  # 明确安装文档依赖

      - name: Generating API documentation..."
        run: sphinx-apidoc -o docs/source/api/ mcsmapi/ -f

      - name: Building Chinese docs
        run: sphinx-build -b html -D language=zh_CN docs/source/ docs/build/zh_CN/

      - name: Building English docs.
        run: sphinx-build -b html -D language=en docs/source/ docs/build/en/

      - name: Check for doc changes
        id: check-docs
        run: |
          git add docs/build/
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.check-docs.outputs.has_changes == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Pull Request
        if: steps.check-docs.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "docs: auto-update documentation [skip ci]"
          title: "[Bot] Documentation Update"
          body: "Automated update from commit ${{ github.sha }}"
          branch: "docs/auto-update-$(date +%s)" # 使用时间戳避免冲突
          delete-branch: true
          labels: "documentation, automated"
          token: ${{ secrets.GITHUB_TOKEN }}
