mcsmapi.apis.file
=================

.. py:module:: mcsmapi.apis.file


Classes
-------

.. autoapisummary::

   mcsmapi.apis.file.File


Module Contents
---------------

.. py:class:: File

   .. py:method:: show(daemonId: str, uuid: str, target: str = '', page: int = 0, page_size: int = 100) -> mcsmapi.models.file.FileList

      获取文件列表

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 文件实例的唯一标识符。
     <br> - target (str, 可选): 用于文件过滤的目标路径。默认为空字符串，表示不按路径过滤。
     <br> - page (int, 可选): 指定分页的页码。默认为0。
     <br> - page_size (int, 可选): 指定每页的项目数量。默认为100。

      **返回:**
     <br> - FileList: 包含文件列表信息和分页详情的FileList模型。



   .. py:method:: content(daemonId: str, uuid: str, target: str) -> str | bytes

      获取文件内容

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 文件实例的唯一标识符。
     <br> - target (str): 文件的目标路径。

      **返回:**
     <br> - str: 文件的内容信息。



   .. py:method:: update(daemonId: str, uuid: str, target: str, text: str) -> bool

      更新文件内容

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 文件实例的唯一标识符。
     <br> - target (str): 文件的目标路径。
     <br> - text (str): 新的文件内容。

      **返回:**
     <br> - bool: 更新成功后返回True。



   .. py:method:: download(daemonId: str, uuid: str, file_name: str) -> str

      下载文件

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 文件实例的唯一标识符。
     <br> - file_name (str): 要下载的文件名。路径+名字, 示例: /backup/world.zip

      **返回:**
     <br> - str: 文件下载URL。



   .. py:method:: upload(daemonId: str, uuid: str, file: bytes, upload_dir: str) -> bool
      :async:


      上传文件

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 文件实例的唯一标识符。
     <br> - file (bytes): 要上传的文件内容。
     <br> - upload_dir (str): 文件上传到的目标路径。

      **返回:**
     <br> - bool: 上传成功后返回True。



   .. py:method:: copy(daemonId: str, uuid: str, copy_map: dict[str, str]) -> bool

      复制多个文件夹或文件到指定位置。

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 文件实例的唯一标识符。
     <br> - copy_map (dict): 复制映射，格式为 {源路径: 目标路径}

      **返回:**
     <br> - bool: 上传成功后返回True。



   .. py:method:: copyOne(daemonId: str, uuid: str, source: str, target: str) -> bool

      复制单个文件或文件夹到指定位置。

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - source (str): 源文件或文件夹的路径。
     <br> - target (str): 目标文件或文件夹的路径。

      **返回:**
     <br> - bool: 移动成功后返回True。



   .. py:method:: move(daemonId: str, uuid: str, copy_map: dict[str, str]) -> bool

      移动多个文件或文件夹到指定位置。

      参数:
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - copy_map (dict): 移动映射，格式为 {源路径: 目标路径}

      返回:
     <br> - bool: 移动成功后返回True。



   .. py:method:: moveOne(daemonId: str, uuid: str, source: str, target: str) -> bool

      从源路径移动单个文件或文件夹到目标路径。

      参数:
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - source (str): 源文件或文件夹的路径。
     <br> - target (str): 目标文件或文件夹的路径。

      返回:
     <br> - bool: 移动成功后返回True。



   .. py:method:: rename(daemonId: str, uuid: str, source: str, new_name: str) -> bool

      重命名单个文件或文件夹。

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - source (str): 源文件或文件夹的路径。
     <br> - new_name (str): 源文件或文件夹的新名字。

      **返回:**
     <br> - bool: 重命名成功后返回True。



   .. py:method:: zip(daemonId: str, uuid: str, source: str, targets: list[str]) -> bool

      压缩多个文件或文件夹到指定位置。

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - source (str): 需要压缩到的 zip 文件路径。
     <br> - targets (list): 要压缩的目标文件或文件夹的路径。

      **返回:**
     <br> - bool: 压缩成功后返回True。



   .. py:method:: unzip(daemonId: str, uuid: str, source: str, target: str, code: str = 'utf-8') -> bool

      解压缩指定的zip文件到目标位置。

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - source (str): 需要解压的zip文件路径。
     <br> - target (str): 解压到的目标路径。
     <br> - code (str, optional): 压缩文件的编码方式，默认为"utf-8"。
          可选值: utf-8, gbk, big5

      **返回:**
     <br> - bool: 解压成功后返回True。



   .. py:method:: delete(daemonId: str, uuid: str, targets: list[str]) -> bool

      删除多个文件或文件夹。

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - targets (list): 要删除的文件或文件夹的路径。

      **返回:**
     <br> - bool: 删除成功后返回True。



   .. py:method:: createFile(daemonId: str, uuid: str, target: str) -> bool

      创建文件。

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - target (str): 目标文件的路径，包含文件名。

      **返回:**
     <br> - bool: 创建成功后返回True。



   .. py:method:: createFloder(daemonId: str, uuid: str, target: str) -> bool

      创建文件夹

      **参数:**
     <br> - daemonId (str): 守护进程的唯一标识符。
     <br> - uuid (str): 实例的唯一标识符。
     <br> - target (str): 目标文件夹的路径。

      **返回:**
     <br> - bool: 创建成功后返回True。



