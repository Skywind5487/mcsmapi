mcsmapi.pool
============

.. py:module:: mcsmapi.pool


Classes
-------

.. autoapisummary::

   mcsmapi.pool.ApiPool


Module Contents
---------------

.. py:class:: ApiPool(*args, **kwds)

   Bases: :py:obj:`enum.Enum`


   Create a collection of name/value pairs.

   Example enumeration:

   >>> class Color(Enum):
   ...     RED = 1
   ...     BLUE = 2
   ...     GREEN = 3

   Access them by:

  <br> - attribute access::

   >>> Color.RED
   <Color.RED: 1>

  <br> - value lookup:

   >>> Color(1)
   <Color.RED: 1>

  <br> - name lookup:

   >>> Color['RED']
   <Color.RED: 1>

   Enumerations can be iterated over, and know how many members they have:

   >>> len(Color)
   3

   >>> list(Color)
   [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

   Methods can be added to enumerations, and members can have their own
   attributes -- see the documentation for details.


   .. py:method:: __str__()


   .. py:attribute:: AUTH
      :value: 'api/auth'



   .. py:attribute:: OVERVIEW
      :value: 'api/overview'



   .. py:attribute:: INSTANCE
      :value: 'api/instance'



   .. py:attribute:: PROTECTED_INSTANCE
      :value: 'api/protected_instance'



   .. py:attribute:: SERVICE
      :value: 'api/service'



   .. py:attribute:: FILE
      :value: 'api/files'



   .. py:attribute:: IMAGE
      :value: 'api/environment'



